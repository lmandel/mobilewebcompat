<!DOCTYPE html><html>
<head><title>screen shot comparison bug reporter</title><meta charset="utf-8">
<style type="text/css">
input[type=text]{width: 50%;} 
div.d1{width: 50%; float:left;position:relative;}div.d2{width: 40%;float:right;}form{float:right; width:40%;}
div.d1 span{position: absolute;font-size: 1.2em; line-height: 1em; top: 0; background: rgba(255, 255, 50, 0.3); opacity: 1; border: 2px outset orange; max-width: 45%; padding:0;}
div.d1 #fxOSLabel{right: 75%; text-align: right;}div.d1 #iOSLabel{left: 55%;} 
div.d1 #fxOSLabel:before{content: "\002b10"; font-size: 2em; color: orange;}
div.d1 #fxOSLabel:after{content: "\002015"; font-size: 2em; color: orange;}
div.d1 #iOSLabel:after{content: "\002b0e"; font-size: 2em; color: orange;}
div.d1 #iOSLabel:before{content: "\002015"; font-size: 2em; color: orange;}
div.d1 img{padding-top: 2em;max-width: 98%}
.err{display:none;position: absolute;background: #faa; top: 5%; width: 80%}
html.show_err .err{display:block;}
.infolink{position: absolute; top:0; right: 0; display: block;}
.message{border: 2px solid black;background: yellow;font-size: larger; position: fixed; top: 10%;right:2.5%; left: 2.5%;z-index: 10;text-align: center;padding: 2em;}
</style>
<script src="http://arewecompatibleyet.com/data/masterbugtable.js"></script>
<script src="./js/translationdictionary.js"></script>
</head>
<body lang="en">
<div class="err">Error</div>
<div class="langlink"><a href="#" onclick="setLang('en')">English</a> | <a href="#" onclick="setLang('es')">Espa√±ol</a></div>
<a href="#help" class="infolink">What's this about?</a>
<script type="text/javascript">

var country = /cctld=(.+)/.test(location.search) ? RegExp.$1 : 'za';
var dataurl = 'http://hallvord.com/temp/moz/'+country+'/comp/'; // location.pathname.indexOf(country+'/comp/') > -1 ? './' : country+'/comp/';
var xhr = new XMLHttpRequest(); 
if(!('withCredentials' in xhr)){document.documentElement.className='show_err';document.getElementsByClassName('err')[0].firstChild.data = 'Your browser does not support CORS (cross-origin XMLHttpRequest). Use a newer web browser to make this page work.';throw 'CORS support required';}
if(typeof window.masterBugTable === 'undefined'){
	document.documentElement.className = 'show_err';document.getElementsByClassName('err')[0].firstChild.data = 'Bug data missing (masterbugtable.js did not load). List of existing bugs will not be shown.'
}
try{
	xhr.open('GET', dataurl+'idx.js', false);xhr.send();
}catch(e){
		document.documentElement.className = 'show_err';document.getElementsByClassName('err')[0].firstChild.data = 'Failed to load list of images for this top-level domain'

}
var imagelist = JSON.parse(xhr.responseText);
/*
 allow both a plain array and an object with an extra 'message' field and the array in 'list'. Main use case is to be able to add
{
 "message":"This review is completed. Thanks :)",
 "list":
}
*/
if('message' in imagelist){
	var div;
	(div = document.body.appendChild(document.createElement('div'))).textContent = __(imagelist.message)+' ';
	div.className = 'message';
	if(imagelist.startAt){
		div.appendChild(document.createElement('a')).href = '#'+imagelist.startAt;
		div.lastChild.textContent = 'Jump to '+imagelist.startAt;
	}
	imagelist = imagelist.list;
}
var div = document.body.appendChild(document.createElement('div')); div.className = 'd1';
var sp1 = div.appendChild(document.createElement('span')),  sp2 = div.appendChild(document.createElement('span'));
sp1.id = 'fxOSLabel',sp2.id = 'iOSLabel';
sp1.textContent = 'Firefox OS', sp2.textContent = 'iPhone';
var current_bugs = document.body.appendChild(document.createElement('div')); current_bugs.className = 'd2';
current_bugs.appendChild(document.createElement('h1'));
current_bugs.appendChild(document.createElement('h2')).textContent = 'Current bugs';
window.onload = function(){
	var img = div.appendChild(document.createElement('img'));
	var i = location.hash ? parseInt(location.hash.substr(1)) : 0;
	if(isNaN(i))i = 0;
	div.appendChild(document.createElement('br'));
	var a=current_bugs.getElementsByTagName('h1')[0].appendChild(document.createElement('a'));
	a.id = 'main-site-link';
	function setIndex(down){
		var skipknown = document.getElementById('skipknown').checked;
		do{
			if(down)i--; else i++;
		}while( skipknown && imagelist[i] && window.masterBugTable && masterBugTable.hostIndex[imagelist[i].hostname] && masterBugTable.hostIndex[imagelist[i].hostname].open.length);
		if (down && i<0) {
			i = 0;
		}else if(i > imagelist.length - 1){
			i = imagelist.length - 1;
		}
		go();
		// preloading..
		if(i+1 in imagelist)(new Image()).src = dataurl+imagelist[i+1].name;
		if(i+2 in imagelist)(new Image()).src = dataurl+imagelist[i+2].name;
	}
	function go(){
		img.src = dataurl + imagelist[i].name;
		location.hash = '#'+i;
		document.getElementsByName('bug_file_loc')[0].value = a.href = 'http://' + (a.textContent = imagelist[i].hostname);
		document.title = 'image '+(i+1)+'/'+imagelist.length;
		updateSummDesc();
		current_bugs.getElementsByTagName('h2').textContent = 'Current bugs for '+imagelist[i].hostname;
		while(current_bugs.childNodes.length>2)current_bugs.removeChild(current_bugs.lastChild);
		if(window.masterBugTable && masterBugTable.hostIndex[imagelist[i].hostname]){
			var dabugs = masterBugTable.hostIndex[imagelist[i].hostname].open.concat(masterBugTable.hostIndex[imagelist[i].hostname].resolved);
			for (var j = 0, id; id = dabugs[j]; j++) {
				var a2 = current_bugs.appendChild(document.createElement('a'));
				a2.href = 'https://bugzilla.mozilla.org/show_bug.cgi?id='+id;
				a2.textContent = masterBugTable.bugs[id].summary;
				current_bugs.appendChild(document.createTextNode(' '+masterBugTable.bugs[id].status+' '+masterBugTable.bugs[id].resolution));
				current_bugs.appendChild(document.createElement('br'));
				current_bugs.appendChild(document.createElement('br'));
			};
		}
		if(current_bugs.childNodes.length===2){
			current_bugs.appendChild(document.createElement('p')).appendChild(document.createTextNode(__('No bugs reported for ')+imagelist[i].hostname+'! :-o'))
		}
		document.getElementsByName('status_whiteboard')[0].value = '[country-'+country+']';
		document.getElementsByName('comment')[0].value = '';
	}
	go();
	window.onhashchange = function(){
		var num = parseInt(location.hash.substr(1));
		if(num != i && !isNaN(num)){
			i = num;
			go();
		}
	}
	document.onkeyup = function(e){
		if (e.target.tagName === 'TEXTAREA') {return;};
		if(e.target.tagName === 'INPUT' && e.target.type === 'text'){return;}
		if(e.keyCode === 37)return setIndex(true);
		if(e.keyCode === 39)return setIndex();
	}
	document.onclick = function(e){
		if(e.target.id === 'prev')setIndex(true),e.preventDefault();
		if(e.target.id === 'next')setIndex(),e.preventDefault();
	}
	window.checkHttpHeaders = function(){
		window.status='Checking headers, please wait...';
		var x = new XMLHttpRequest();
		var url = document.getElementsByName('bug_file_loc')[0].value;
		x.open('GET', 'headers.py?url=' + (url), true);
		x.onreadystatechange=function(){
			if(x.readyState!=4)return;
			window.status='';
			if(x.status == 200){
				if(x.responseText == ''){
					alert('No interestingness here, headers pretty much equal')
				}else{
					var str = x.responseText;
					if(confirm('Check returned: \n'+str+'\n\nInsert into comment field?')){
						document.getElementsByName('comment')[0].value='\n\n'+str;
						document.getElementsByName('status_whiteboard')[0].value += '[serversniff][contactready]'
					}
				}
			}else if (x.status == 500 || x.status == 404) {
				alert('Sorry, there was a technical problem. Hopefully it will get sorted out..')
			}
		}
		x.send();
	}
}



function updateSummDesc(){
	var url = document.getElementsByName('bug_file_loc')[0].value;
	document.getElementById('main-site-link').href = url;
	var host = document.getElementById('main-site-link').hostname;
	document.getElementsByName('short_desc')[0].value = host + ' '+document.getElementsByTagName('select')[0].value+' Firefox OS';
	if (document.getElementsByTagName('select')[0].selectedIndex<3 && /^\s+$/.test(document.getElementsByName('comment')[0].value)) {
		//document.getElementsByName('comment')[0].value=='Compare Content-length for the HTTP requests below'
	}else if(/^\s+$/.test(document.getElementsByName('comment')[0].value)){
		document.getElementsByName('status_whiteboard')[0].value = document.getElementsByName('status_whiteboard')[0].value.replace(/\[serversniff\]/, '[webkitcss]');
	}
}

document.getElementsByClassName('infolink')[0].addEventListener('click', function(e){
	var el = document.getElementById('help');
	el.style.position = 'absolute';
	el.style.top = e.target.offsetHeight + 'px';
	el.style.width = '35%';
	el.style.right = 0;
	el.style.zIndex = 11;
	el.style.border = '2px solid blue';
	el.style.background = '#fff'
	el.getElementsByClassName('close')[0].onclick = function(){el.setAttribute('style', 'clear:both');}
	e.preventDefault();
}, false)
function setLang(lang){
	var oldLang = document.body.getAttribute('lang'), buildOriginalPhraseList = false, nodeCounter = 0;
	if(!(oldLang in translationDictionary)){
		translationDictionary[oldLang] = [];
		buildOriginalPhraseList = true;
	}
	document.body.setAttribute('lang', lang);
	var nodeIterator = document.evaluate('//text()', document.body, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
	var textNode = nodeIterator.snapshotItem(nodeCounter);
	while (textNode) {
		if(!(/^\s*$/.test(textNode.data) || textNode.parentNode.tagName === 'OL')){
			if(buildOriginalPhraseList){
				translationDictionary[oldLang][nodeCounter] = textNode.data;
				if('value' in textNode.parentNode && 'form' in textNode.parentNode)textNode.parentNode.value = textNode.data; // <option> .. 
			}
			// If we're translating to a language we have a direct phrase mapping from English for..
			if(translationDictionary.en[nodeCounter] in translationDictionary[lang]){
				textNode.data = translationDictionary[lang][translationDictionary.en[nodeCounter]];
			}else if(translationDictionary.en[nodeCounter]){ // default to resetting it back to English..
				textNode.data = translationDictionary.en[nodeCounter];
			}
		}
		nodeCounter++;
		textNode = nodeIterator.snapshotItem(nodeCounter);
	}
}
function getStrings(){ // purely a convenience method when creating translation dictionaries..
	var nodeCounter = 0;
	var strings = [];
	var nodeIterator = document.evaluate('//text()', document.body, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
	var textNode = nodeIterator.snapshotItem(nodeCounter);
	while (textNode) {
		strings.push(textNode.data);
		nodeCounter++;
		textNode = nodeIterator.snapshotItem(nodeCounter);
	}
	return strings;
}

</script>

<form action="https://bugzilla.mozilla.org/enter_bug.cgi">
	<hr>
	<p><em>Go through images with prev/next buttons below or left/right arrow button</em></p>
<button id="prev">&lt;&lt;</button>
<button id="next">&gt;&gt;</button> <label><input type="checkbox" id="skipknown"> Skip screenshots for sites with open bugs</label>

	<p>If you notice an issue that's not reported, please test to check that it's a real issue. You can pre-fill some values in Bugzilla from this form:</p>
<p>URL: <input name="bug_file_loc" value="http://" type=text onchange="updateSummDesc()"><a href=""></a></p>
<p><span>Type problem:</span><select  onchange="updateSummDesc()"><option>sends desktop site to</option><option>sends simplified site to</option><option>sends wap content to</option><option>has broken layout in</option><option>does not play video in</option></select></p>

<p>Summary: <input name="short_desc" value=" sends desktop site to Firefox OS" type=text></p>
<p>Whiteboard: <input name="status_whiteboard" value="[country-]" type=text></p>
<span>Further comments:</span>
<textarea name="comment"></textarea>
<p>HTTP header check: <button onclick="checkHttpHeaders();return false;">Check now</button></p>
<bR><button type="submit">Send to bugzilla</button>
	<br>
<em>Note: click "Submit bug" on the next screen to finish reporting the issue.</em>

<input name="alias" value="" type=hidden>
<input name="assigned_to" value="nobody@mozilla.org" type=hidden>
<input name="blocked" value="" type=hidden>

<input name="attach_text" value="" type=hidden>

<input name="bug_ignored" value="0" type=hidden>
<input name="bug_severity" value="normal" type=hidden>
<input name="bug_status" value="NEW" type=hidden>
<input name="cf_blocking_b2g" value="---" type=hidden>
<input name="cf_blocking_fennec" value="---" type=hidden>
<input name="cf_crash_signature" value="" type=hidden>
<input name="cf_status_b2g18" value="---" type=hidden>
<input name="cf_status_b2g_1_1_hd" value="---" type=hidden>
<input name="cf_status_b2g_1_2" value="---" type=hidden>
<input name="cf_status_b2g_1_3" value="---" type=hidden>
<input name="cf_status_b2g_1_4" value="---" type=hidden>
<input name="cf_status_firefox26" value="---" type=hidden>
<input name="cf_status_firefox27" value="---" type=hidden>
<input name="cf_status_firefox28" value="---" type=hidden>
<input name="cf_status_firefox29" value="---" type=hidden>
<input name="cf_status_firefox_esr24" value="---" type=hidden>
<input name="cf_tracking_b2g18" value="---" type=hidden>
<input name="cf_tracking_firefox26" value="---" type=hidden>
<input name="cf_tracking_firefox27" value="---" type=hidden>
<input name="cf_tracking_firefox28" value="---" type=hidden>
<input name="cf_tracking_firefox29" value="---" type=hidden>
<input name="cf_tracking_firefox_esr24" value="---" type=hidden>
<input name="cf_tracking_firefox_relnote" value="---" type=hidden>
<input name="cf_tracking_relnote_b2g" value="---" type=hidden>
<input name="component" value="Mobile" type=hidden>
<input name="contenttypeentry" value="" type=hidden>
<input name="contenttypemethod" value="autodetect" type=hidden>
<input name="contenttypeselection" value="text/plain" type=hidden>
<input name="data" value="" type=hidden>
<input name="defined_groups" value="1" type=hidden>
<input name="dependson" value="" type=hidden>
<input name="description" value="" type=hidden>
<input name="flag_type-4" value="X" type=hidden>
<input name="flag_type-607" value="X" type=hidden>
<input name="flag_type-800" value="X" type=hidden>
<input name="form_name" value="enter_bug" type=hidden>
<input name="keywords" value="" type=hidden>
<input name="op_sys" value="Gonk (Firefox OS)" type=hidden>
<input name="priority" value="--" type=hidden>
<input name="product" value="Tech Evangelism" type=hidden>
<input name="qa_contact" value="" type=hidden>
<input name="rep_platform" value="All" type=hidden>
<input name="requestee_type-4" value="" type=hidden>
<input name="requestee_type-607" value="" type=hidden>
<input name="requestee_type-800" value="" type=hidden>
<input name="target_milestone" value="---" type=hidden>
<input name="version" value="unspecified" type=hidden> 
<hr>
</form>

<div style="clear:both" id="help">
<a href="#" class="close">X</a>
<h1>What's this about?</h1>
<p>In short: <b>find </b>sites that give Firefox OS a worse user experience than other smartphones, <b>report bugs</b> so that we can follow up. Perhaps you'd like to watch a <a href="https://air.mozilla.org/compcast-1-reviewing-screenshots-reporting-bugs/">screencast explaining screenshot reviews</a>?</p>
<h2>Cool, how?</h2>
<ol>
	<li>Scroll through screenshots until you find one where the left and right screenshots look different, the left seems like a worse user experience, and the "Current bugs" list is empty.
	<li>Optionally use the "HTTP header check" feature and if the response is interesting, click OK to insert into the form
	<li>Click "Send to bugzilla"-button, and on the next page scroll down and click "Submit bug". (You will need an account at bugzilla.mozilla.org for this step)
	<li>Go back (two steps) to this page and keep scrolling through screenshots as long as you wish.
</ol>
<h2>Gotchas?</h2>
<ul><li>It can be helpful to test on a real Firefox OS phone or an emulator if in doubt..
	<li>If one of the screenshots looks like it didn't load fully, it probably needs manual testing to see if it's an issue. You can ignore those screenshots if you don't have a device
	<li>The <b>current bugs</b> list is updated every two hours, so you will not see your bug reports appear immediately. (Also if somebody else is reviewing at the same time, you might report duplicate bugs.)
	
</ul>
<p>Need help? Ask <a href="http://twitter.com/MozWebCompat">@MozWebCompat</a> on Twitter, hsteen@mozilla.com by E-mail or come to the #webcompat room on Mozilla's IRC server (irc.mozilla.org).</p>
</div>

</body></html>